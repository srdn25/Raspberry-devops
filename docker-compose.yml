# docker-compose.yml
version: "3"

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-02-07T08-17-33Z
  command: server /data{1...4} --console-address ":9001"
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: ${MINIO_ROOT_USER}
    MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3


services:
  postgres:
    image: postgres:12.2-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./../data/psql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  grafana:
    image: grafana/grafana:8.0.4
    restart: always
    depends_on:
      - postgres
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/custom.ini

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --requirepass ${REDIS_PASSWORD} --loglevel
    volumes:
      - ./../data/redis:/data

  minio:
    <<: *minio-common
    hostname: minio
    volumes:
      - data-minio1:/data1
      - data-minio2:/data2
      - data-minio3:/data3
      - data-minio4:/data4

  nginx:
    image: nginx:stable-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio

volumes:
  data-minio1:
  data-minio2:
  data-minio3:
  data-minio4:
